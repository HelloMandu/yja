{"version":3,"sources":["components/MovieList/MovieList.js","containers/CategoryContainer/CategoryContainer.js","components/header/Header.js","components/Swiper/SwiperView.js","pages/Mainpage/MainPage.js","components/Loading.js","api/movie.js","store/loading.js","store/movie.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["MovieItem","React","memo","title","summary","small_cover_image","className","src","alt","MovieList","movieList","id","useRef","map","current","genres","genre","CategoryContainer","SwiperCore","use","Autoplay","Navigation","Pagination","EffectCoverflow","useEffect","paginationBullet","document","getElementById","i","length","firstChild","children","innerHTML","slidesPerView","centeredSlides","pagination","clickable","loop","filter","findIndex","item","Header","SwiperView","effect","grabCursor","navigation","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","autoplay","delay","disableOnInteraction","large_cover_image","MainPage","useSelector","state","movie","list","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","LoadingModal","classes","loading","isLoading","Backdrop","open","CircularProgress","getMovie","a","URL","undefined","get","response","data","movies","START_LOADING","FINISH_LOADING","startLoading","createAction","finishLoading","handleActions","action","getMovieSaga","movieSaga","GET_MOVIE_LIST","GET_MOVIE_SUCCESS","GET_MOVIE_FAILURE","getMovieList","put","call","payload","MOVIE_LIST","type","error","takeLatest","App","dispatch","useDispatch","Loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render"],"mappings":"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","file":"static/js/main.7ffbc08a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nimport \"./MovieList.scss\";\r\n\r\nconst MovieItem = React.memo(function ({ title, summary, small_cover_image }) {\r\n    return (\r\n        <>\r\n            <img\r\n                className=\"movie-img\"\r\n                src={small_cover_image}\r\n                alt=\"movie-item\"\r\n            />\r\n            <div className=\"movie-description\">\r\n                <div className=\"movie-title\">{title}</div>\r\n                <div className=\"movie-summary\">{summary}</div>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nconst MovieList = ({ movieList }) => {\r\n    const id = useRef(0);\r\n    return (\r\n        <ul className=\"movie-list\">\r\n            {movieList.map(({ title, summary, small_cover_image }) => {\r\n                id.current += 1;\r\n                return (\r\n                    <li key={id.current} className=\"movie-item\">\r\n                        <MovieItem\r\n                            title={title}\r\n                            summary={summary}\r\n                            small_cover_image={small_cover_image}\r\n                        ></MovieItem>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default React.memo(MovieList);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n    Autoplay,\r\n    Navigation,\r\n    Pagination,\r\n    EffectCoverflow,\r\n} from \"swiper\";\r\n\r\nimport MovieList from \"../../components/MovieList/MovieList\";\r\n\r\nimport \"./CategoryContainer.scss\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/effect-coverflow/effect-coverflow.scss\";\r\n\r\nconst genres = [\r\n    {\r\n        id: 1,\r\n        genre: \"All\",\r\n    },\r\n    {\r\n        id: 2,\r\n        genre: \"Action\",\r\n    },\r\n    {\r\n        id: 3,\r\n        genre: \"Adventure\",\r\n    },\r\n    {\r\n        id: 4,\r\n        genre: \"Animation\",\r\n    },\r\n    {\r\n        id: 5,\r\n        genre: \"Biography\",\r\n    },\r\n    {\r\n        id: 6,\r\n        genre: \"Comedy\",\r\n    },\r\n    {\r\n        id: 7,\r\n        genre: \"Crime\",\r\n    },\r\n    {\r\n        id: 8,\r\n        genre: \"Documentary\",\r\n    },\r\n    {\r\n        id: 9,\r\n        genre: \"Drama\",\r\n    },\r\n    {\r\n        id: 10,\r\n        genre: \"Family\",\r\n    },\r\n    {\r\n        id: 11,\r\n        genre: \"Fantasy\",\r\n    },\r\n    {\r\n        id: 12,\r\n        genre: \"Film Noir\",\r\n    },\r\n    {\r\n        id: 13,\r\n        genre: \"History\",\r\n    },\r\n    {\r\n        id: 14,\r\n        genre: \"Horror\",\r\n    },\r\n    {\r\n        id: 15,\r\n        genre: \"Music\",\r\n    },\r\n    {\r\n        id: 16,\r\n        genre: \"Musical\",\r\n    },\r\n    {\r\n        id: 17,\r\n        genre: \"Mystery\",\r\n    },\r\n    {\r\n        id: 18,\r\n        genre: \"Romance\",\r\n    },\r\n    {\r\n        id: 19,\r\n        genre: \"Sci-Fi\",\r\n    },\r\n    {\r\n        id: 20,\r\n        genre: \"Short Film\",\r\n    },\r\n    {\r\n        id: 21,\r\n        genre: \"Sport\",\r\n    },\r\n    {\r\n        id: 22,\r\n        genre: \"Superhero\",\r\n    },\r\n    {\r\n        id: 23,\r\n        genre: \"Thriller\",\r\n    },\r\n    {\r\n        id: 24,\r\n        genre: \"War\",\r\n    },\r\n    {\r\n        id: 25,\r\n        genre: \"Western\",\r\n    },\r\n];\r\n\r\nconst CategoryContainer = ({ movieList }) => {\r\n    SwiperCore.use([Autoplay, Navigation, Pagination, EffectCoverflow]);\r\n    useEffect(() => {\r\n        const paginationBullet = document.getElementById(\"movie-swiper\");\r\n        for (let i = 0; i < genres.length; i++) {\r\n            paginationBullet.firstChild.children[i].innerHTML = genres[i].genre;\r\n        }\r\n    }, [movieList]);\r\n    return (\r\n        <>\r\n            <Swiper\r\n                id=\"movie-swiper\"\r\n                className=\"movie-swiper\"\r\n                slidesPerView={1}\r\n                centeredSlides={true}\r\n                pagination={{ clickable: true }}\r\n                loop={true}\r\n            >\r\n                {genres.map(({ id, genre }) => (\r\n                    <SwiperSlide key={id} className=\"movie-slide\" >\r\n                        <MovieList\r\n                            movieList={\r\n                                id === 1\r\n                                    ? movieList\r\n                                    : movieList.filter(\r\n                                          ({ genres }) =>\r\n                                              genres.findIndex(\r\n                                                  (item) => item === genre\r\n                                              ) !== -1\r\n                                      )\r\n                            }\r\n                        ></MovieList>\r\n                    </SwiperSlide>\r\n                ))}\r\n            </Swiper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CategoryContainer;\r\n","import React from \"react\";\r\n\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n    return <h1 className=\"header\">영화를 잘 아는 사람들</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Autoplay, Navigation, EffectCoverflow } from \"swiper\";\r\n\r\nimport \"./SwiperView.scss\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/effect-coverflow/effect-coverflow.scss\";\r\n\r\nconst SwiperView = ({movieList}) => {\r\n    SwiperCore.use([Autoplay, Navigation, EffectCoverflow]);\r\n    return (\r\n        <Swiper\r\n            className=\"swiper\"\r\n            effect={'coverflow'}\r\n            grabCursor={true}\r\n            slidesPerView={'auto'}\r\n            centeredSlides={true}\r\n            navigation\r\n            loop={true}\r\n            coverflowEffect={{\r\n                rotate: 50,\r\n                stretch: 0,\r\n                depth: 100,\r\n                modifier: 1,\r\n                slideShadows: true,\r\n              }}\r\n            autoplay={{\r\n                delay: 2000,\r\n                disableOnInteraction: false,\r\n            }}\r\n        >\r\n            {movieList.map(({ id, large_cover_image }) => (\r\n                <SwiperSlide key={id} className=\"swiper-slide\">\r\n                    <img src={large_cover_image} alt=\"movie-cover\" />\r\n                </SwiperSlide>\r\n            ))}\r\n        </Swiper>\r\n    );\r\n};\r\n\r\nexport default SwiperView;\r\n","import React from 'react';\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport CategoryContainer from \"../../containers/CategoryContainer/CategoryContainer\";\r\n\r\nimport Header from \"../../components/header/Header\";\r\nimport SwiperView from \"../../components/Swiper/SwiperView\";\r\n\r\nconst MainPage = () => {\r\n    const movieList = useSelector((state) => state.movie.list);\r\n    return (\r\n        <div className=\"mainpage\">\r\n            <Header></Header>\r\n            <SwiperView movieList={movieList}></SwiperView>\r\n            <CategoryContainer movieList={movieList}></CategoryContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Backdrop, CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: \"#fff\",\r\n    },\r\n}));\r\n\r\nconst LoadingModal = () => {\r\n    const classes = useStyles();\r\n    const loading = useSelector((state) => state.loading.isLoading);\r\n    return (\r\n        <div>\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingModal;","import { get } from 'axios'\r\n\r\nexport const getMovie = async (genre) => {\r\n    const URL = `https://yts.mx/api/v2/list_movies.json?limit=50${genre === undefined ? '' : `&genre=${genre}`}`\r\n    const response = await get(URL)\r\n    return response.data.data.movies\r\n}\r\n\r\nexport const getDetail = async (id) => {\r\n    const URL = `https://yts.mx/api/v2/movie_details.json?movie_id=${id}`\r\n    const response = await get(URL)\r\n    return response.data.data\r\n}","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst START_LOADING = \"loading/START_LOADING\";\r\nconst FINISH_LOADING = \"loading/FINISH_LOADING\";\r\n\r\nexport const startLoading = createAction(START_LOADING);\r\nexport const finishLoading = createAction(FINISH_LOADING);\r\n\r\nconst initialState = {\r\n    isLoading: true,\r\n};\r\n\r\nconst loading = handleActions(\r\n    {\r\n        [START_LOADING]: (state, action) => ({\r\n            isLoading: true,\r\n        }),\r\n        [FINISH_LOADING]: (state, action) => ({\r\n            isLoading: false,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n\r\nexport default loading;","import { createAction, handleActions } from 'redux-actions'\r\nimport { call, put, takeLatest } from 'redux-saga/effects'\r\n\r\nimport { getMovie } from '../api/movie'\r\n\r\nimport { startLoading, finishLoading } from './loading'\r\n\r\nconst GET_MOVIE_LIST = 'movie/GET_MOVIE_LIST'\r\nconst GET_MOVIE_SUCCESS = 'movie/GET_MOVIE_SUCCESS'\r\nconst GET_MOVIE_FAILURE = 'movie/GET_MOVIE_FAILURE'\r\n\r\nexport const getMovieList = createAction(GET_MOVIE_LIST)\r\n\r\nexport function* getMovieSaga(action) {\r\n    yield put(startLoading())\r\n    try {\r\n        const MOVIE_LIST = yield call(getMovie, action.payload)\r\n        yield put({\r\n            type: GET_MOVIE_SUCCESS,\r\n            payload: MOVIE_LIST\r\n        })\r\n    }\r\n    catch (e) {\r\n        yield put({\r\n            type: GET_MOVIE_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n    yield put(finishLoading())\r\n}\r\n\r\nexport function* movieSaga() {\r\n    yield takeLatest(GET_MOVIE_LIST, getMovieSaga)\r\n}\r\n\r\nconst initialState = {\r\n    list: {},\r\n    error: false\r\n}\r\n\r\nconst movie = handleActions(\r\n    {\r\n        [GET_MOVIE_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            list: action.payload\r\n        }),\r\n        [GET_MOVIE_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            error: action.payload\r\n        })\r\n    },\r\n    initialState\r\n)\r\n\r\nexport default movie","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport MainPage from \"./pages/Mainpage/MainPage\";\r\n\r\nimport Loading from \"./components/Loading\";\r\n\r\nimport { getMovieList } from \"./store/movie\";\r\n\r\nconst App = () => {\r\n    const isLoading = useSelector((state) => state.loading.isLoading);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getMovieList(\"action\"));\r\n    }, [dispatch]);\r\n\r\n    return <>{isLoading ? <Loading /> : <MainPage></MainPage>}</>;\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport { all } from \"redux-saga/effects\";\r\nimport movie, { movieSaga } from \"./movie\";\r\nimport loading from \"./loading\";\r\n\r\nconst rootReducer = combineReducers({\r\n    movie,\r\n    loading,\r\n});\r\n\r\nexport function* rootSaga() {\r\n    yield all([movieSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport rootReducer, { rootSaga } from './store'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n)\r\nsagaMiddleware.run(rootSaga)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}